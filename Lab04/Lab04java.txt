import java.io.File;
import java.io.IOException;
import java.time.Duration;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class Lab4ss {
    static WebDriver driver;
    static Logger logger = Logger.getLogger("Lab4");

    @BeforeTest
    public static void OpenWebPage() {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--remote-allow-origins=*");
        PropertyConfigurator.configure("Log4j.properties");
        driver = new ChromeDriver(options);

        driver.get("https://www.globalsqa.com/angularJs-protractor/BankingProject");
        logger.info("Web Page is Opened");
    }

    @Test(priority = 1)
    public static void ManagerLogin() {
        try {
            WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));		
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Bank Manager Login']")));
    		WebElement managerLogin=driver.findElement(By.xpath("//button[text()='Bank Manager Login']"));
    		managerLogin.click();
    		logger.info("Manager Logged In");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[contains(@ng-click,'addCust')]")));

    		WebElement addCustommerbtn=driver.findElement(By.xpath("//button[contains(@ng-click,'addCust')]"));
    		addCustommerbtn.click();
    		logger.info("Add customer clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@placeholder='First Name']")));
    		WebElement firstName=driver.findElement(By.xpath("//input[@placeholder='First Name']"));
    		firstName.sendKeys("Usama");
    		logger.info("First Name Entered");
    		WebElement lastName=driver.findElement(By.xpath("//input[@placeholder='Last Name']"));
    		lastName.sendKeys("Hameed");
    		logger.info("Last Name Entered");
    		WebElement postCode=driver.findElement(By.xpath("//input[@placeholder='Post Code']"));
    		postCode.sendKeys("3241");
    		WebElement addCustmrBtn=driver.findElement(By.xpath("//button[text()='Add Customer']"));
    		addCustmrBtn.click();
    		logger.info("Post Key Entered");
    		driver.switchTo().alert().accept();
    		logger.info("Alert is handeled");

            
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "ManagerLogin");
        }
    }

    @Test(priority = 2)
    public static void OpenCustomerAccount() {
        try {
        	WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));
    		WebElement openAcctBtn=driver.findElement(By.xpath("//button[@ng-click='openAccount()']"));
    		openAcctBtn.click();
    		logger.info("Open Account is clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@ng-model='custId']")));
    		Select customerSelect=new Select(driver.findElement(By.xpath("//select[@ng-model='custId']")));
    		customerSelect.selectByVisibleText("Usama Hameed");
    		logger.info("Usama Hameed Selected");
    		Select currency=new Select(driver.findElement(By.xpath("//select[@ng-model='currency']")));
    		currency.selectByIndex(1);
    		logger.info("Currency Dollar Selected");
    		WebElement processBtn=driver.findElement(By.xpath("//button[text()='Process']"));
    		processBtn.click();
    		logger.info("Process Button Clicked and Account for user is open");
    		driver.switchTo().alert().accept();
    		logger.info("Alert is handeled");
    		
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "OpenCustomerAccount");
        }
    }

    @Test(priority = 3)
    public static void CustomerLogin() {
        try {
        	WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));
    		WebElement homeBtn=driver.findElement(By.xpath("//button[text()='Home']"));
    		homeBtn.click();
    		logger.info("Go to Home ");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Customer Login']")));
    		WebElement customerLoginBtn=driver.findElement(By.xpath("//button[text()='Customer Login']"));
    		customerLoginBtn.click();
    		logger.info("Customer Login is clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@id='userSelect']")));
    		Select customerSelect=new Select(driver.findElement(By.xpath("//select[@id='userSelect']")));
    		customerSelect.selectByVisibleText("Usama Hameed");
    		logger.info("Usama Hameed Selected");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Login']")));
    		WebElement loginBtn=driver.findElement(By.xpath("//button[text()='Login']"));
    		loginBtn.click();
    		logger.info("Successfully Logged IN");
            
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "CustomerLogin");
        }
    }
    @Test(priority=4)
	public static void DepositWithdraw()
	{
    	try {
    		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[@ng-click='deposit()']")));
    		WebElement depositBtn=driver.findElement(By.xpath("//button[@ng-click='deposit()']"));
    		depositBtn.click();
    		logger.info("Deposit Button Clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@placeholder='amount']")));
    		WebElement amount=driver.findElement(By.xpath("//input[@placeholder='amount']"));
    		amount.sendKeys("6000");
    		logger.info("Amount Entered");
    		WebElement deopsitBtn=driver.findElement(By.xpath("//button[text()='Deposit']"));
    		deopsitBtn.click();
    		logger.info("Successfully Deposited");
    		
    		WebElement withdrawlBtn=driver.findElement(By.xpath("//button[@ng-click='withdrawl()']"));
    		withdrawlBtn.click();
    		logger.info("Widthdraw Clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//label[text()='Amount to be Withdrawn :']//following-sibling::input")));
    		WebElement amount1=driver.findElement(By.xpath("//label[text()='Amount to be Withdrawn :']//following-sibling::input"));
    		amount1.sendKeys("2000");
    		//driver.manage().timeouts().implicitlyWait(5,TimeUnit.SECONDS);
    		logger.info("Amount Entered");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Withdraw']")));
    		WebElement widthdrawBtn=driver.findElement(By.xpath("//button[text()='Withdraw']"));
    		widthdrawBtn.click();
    		amount1.sendKeys("1000");
    		widthdrawBtn.click();
    		logger.info("Successfully Withdrawn");
            
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "DepositWithdraw");
        }
	}
	
    @Test(priority=5)
	public static void listTransaction() throws InterruptedException
	{
    	try {
    		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));
    		
    		WebElement transaction=driver.findElement(By.xpath("//button[@ng-click='transactions()']"));		
    		transaction.click();
    		logger.info("Transaction Button Clicked");
    		Thread.sleep(3000);
    		driver.navigate().refresh();
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//table[@class='table table-bordered table-striped']")));
    		List <WebElement> rows=driver.findElements(By.xpath("//table[@class='table table-bordered table-striped']//tbody//tr"));
    		int nRow=rows.size();
    		 List<WebElement> column=(List<WebElement>) driver.findElements(By.xpath("//table[@class='table table-bordered table-striped']//thead//tr//td"));
    	        int ncol=column.size();
    	        for (int i = 1 ; i <= nRow; i++) {
    	            for (int j = 1; j <= ncol; j++) {
    	                String cellText = driver.findElement(By.xpath("//table[@class='table table-bordered table-striped']//tbody//tr["+i+"]/td["+j+"]")).getText()+" ";
    	                System.out.print(cellText);
    	            }
    	            System.out.println(); 
    	        }
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "listTransaction");
        }
	}
    @Test(priority=6)
	public static void resetTransactions()
	{
    	try {
    	
    		WebElement resetBtn=driver.findElement(By.xpath("//button[text()='Reset']"));
    		resetBtn.click();
    		logger.info("Transaction History Reset");
    		WebElement logoutBtn=driver.findElement(By.xpath("//button[@ng-click='byebye()']"));
    		logoutBtn.click();
    		logger.info("User Logged Out");
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "resetTransactions");
        }
	}
    @Test(priority=7)
	public static void deleteCustomer()
	{
    	try {
    		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(20));
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Home']")));
    		WebElement homeBtn=driver.findElement(By.xpath("//button[@ng-click='home()']"));
    		homeBtn.click();
    		logger.info("Home Button Clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[text()='Bank Manager Login']")));
    		WebElement managerLogin=driver.findElement(By.xpath("//button[text()='Bank Manager Login']"));
    		managerLogin.click();
    		logger.info("Manager Logged In");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[@ng-click='showCust()']")));
    		WebElement customersBtn=driver.findElement(By.xpath("//button[@ng-click='showCust()']"));
    		customersBtn.click();
    		logger.info("Customers Clicked");
    		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//td[text()='Usama']//following-sibling::td//following-sibling::td//following-sibling::td//following-sibling::td//child::button")));
    		WebElement deleteBtn=driver.findElement(By.xpath("//td[text()='Usama']//following-sibling::td//following-sibling::td//following-sibling::td//following-sibling::td//child::button"));
    		deleteBtn.click();
    		logger.info("Usama Hameed Deleted");
        } catch (Exception e) {
            handleExceptionAndScreenshot(e, "resetTransactions");
        }
	}
   

    @AfterTest
    public static void afterTest() {
        driver.close();
    }

    @AfterMethod
    public void afterMethod(ITestResult result) {
        if (result.getStatus() == ITestResult.FAILURE) {
            try {
                TakesScreenshot screenshot = (TakesScreenshot) driver;
                File source = screenshot.getScreenshotAs(OutputType.FILE);
                String screenshotName = result.getMethod().getMethodName() + "_" + System.currentTimeMillis() + ".png";
                File target = new File("C:\\Users\\4882\\eclipse-workspace\\Lab04\\screenshot\\" + screenshotName); 
                org.apache.commons.io.FileUtils.copyFile(source, target);
                logger.error("Screenshot taken and saved as: " + screenshotName);
            } catch (IOException e) {
                logger.error("Exception while taking screenshot: " + e.getMessage());
            }
        }
    }

    private static void handleExceptionAndScreenshot(Exception e, String methodName) {
        try {
            TakesScreenshot screenshot = (TakesScreenshot) driver;
            File source = screenshot.getScreenshotAs(OutputType.FILE);
            String screenshotName = methodName + "_" + System.currentTimeMillis() + ".png";
            File target = new File("screenshots/" + screenshotName); // Change the path as needed
            org.apache.commons.io.FileUtils.copyFile(source, target);
            logger.error("Screenshot taken and saved as: " + screenshotName);
        } catch (IOException ioException) {
            logger.error("Exception while taking screenshot: " + ioException.getMessage());
        }
        logger.error("Exception in test method " + methodName + ": " + e.getMessage());
    }
}
